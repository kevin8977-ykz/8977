<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjpowernode.p2p.mapper.loan.IncomeRecordMapper">
  <resultMap id="BaseResultMap" type="com.bjpowernode.p2p.model.loan.IncomeRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="loan_id" jdbcType="INTEGER" property="loanId" />
    <result column="bid_id" jdbcType="INTEGER" property="bidId" />
    <result column="bid_money" jdbcType="DOUBLE" property="bidMoney" />
    <result column="income_date" jdbcType="DATE" property="incomeDate" />
    <result column="income_money" jdbcType="DOUBLE" property="incomeMoney" />
    <result column="income_status" jdbcType="INTEGER" property="incomeStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, loan_id, bid_id, bid_money, income_date, income_money, income_status
  </sql>
  <select id="selectByExample" parameterType="com.bjpowernode.p2p.model.loan.IncomeRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from b_income_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from b_income_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from b_income_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bjpowernode.p2p.model.loan.IncomeRecordExample">
    delete from b_income_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bjpowernode.p2p.model.loan.IncomeRecord">
    insert into b_income_record (id, uid, loan_id, 
      bid_id, bid_money, income_date, 
      income_money, income_status)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{loanId,jdbcType=INTEGER}, 
      #{bidId,jdbcType=INTEGER}, #{bidMoney,jdbcType=DOUBLE}, #{incomeDate,jdbcType=DATE}, 
      #{incomeMoney,jdbcType=DOUBLE}, #{incomeStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bjpowernode.p2p.model.loan.IncomeRecord">
    insert into b_income_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="loanId != null">
        loan_id,
      </if>
      <if test="bidId != null">
        bid_id,
      </if>
      <if test="bidMoney != null">
        bid_money,
      </if>
      <if test="incomeDate != null">
        income_date,
      </if>
      <if test="incomeMoney != null">
        income_money,
      </if>
      <if test="incomeStatus != null">
        income_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="loanId != null">
        #{loanId,jdbcType=INTEGER},
      </if>
      <if test="bidId != null">
        #{bidId,jdbcType=INTEGER},
      </if>
      <if test="bidMoney != null">
        #{bidMoney,jdbcType=DOUBLE},
      </if>
      <if test="incomeDate != null">
        #{incomeDate,jdbcType=DATE},
      </if>
      <if test="incomeMoney != null">
        #{incomeMoney,jdbcType=DOUBLE},
      </if>
      <if test="incomeStatus != null">
        #{incomeStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bjpowernode.p2p.model.loan.IncomeRecordExample" resultType="java.lang.Long">
    select count(*) from b_income_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update b_income_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.loanId != null">
        loan_id = #{record.loanId,jdbcType=INTEGER},
      </if>
      <if test="record.bidId != null">
        bid_id = #{record.bidId,jdbcType=INTEGER},
      </if>
      <if test="record.bidMoney != null">
        bid_money = #{record.bidMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.incomeDate != null">
        income_date = #{record.incomeDate,jdbcType=DATE},
      </if>
      <if test="record.incomeMoney != null">
        income_money = #{record.incomeMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.incomeStatus != null">
        income_status = #{record.incomeStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update b_income_record
    set id = #{record.id,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      loan_id = #{record.loanId,jdbcType=INTEGER},
      bid_id = #{record.bidId,jdbcType=INTEGER},
      bid_money = #{record.bidMoney,jdbcType=DOUBLE},
      income_date = #{record.incomeDate,jdbcType=DATE},
      income_money = #{record.incomeMoney,jdbcType=DOUBLE},
      income_status = #{record.incomeStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjpowernode.p2p.model.loan.IncomeRecord">
    update b_income_record
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="loanId != null">
        loan_id = #{loanId,jdbcType=INTEGER},
      </if>
      <if test="bidId != null">
        bid_id = #{bidId,jdbcType=INTEGER},
      </if>
      <if test="bidMoney != null">
        bid_money = #{bidMoney,jdbcType=DOUBLE},
      </if>
      <if test="incomeDate != null">
        income_date = #{incomeDate,jdbcType=DATE},
      </if>
      <if test="incomeMoney != null">
        income_money = #{incomeMoney,jdbcType=DOUBLE},
      </if>
      <if test="incomeStatus != null">
        income_status = #{incomeStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjpowernode.p2p.model.loan.IncomeRecord">
    update b_income_record
    set uid = #{uid,jdbcType=INTEGER},
      loan_id = #{loanId,jdbcType=INTEGER},
      bid_id = #{bidId,jdbcType=INTEGER},
      bid_money = #{bidMoney,jdbcType=DOUBLE},
      income_date = #{incomeDate,jdbcType=DATE},
      income_money = #{incomeMoney,jdbcType=DOUBLE},
      income_status = #{incomeStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--List<Map<String, Object>> selectIncomeRecordListRecent(Integer uid);-->
    <select id="selectIncomeRecordListRecent" resultType="java.util.Map">
        select
        li.product_name productName,
        ir.income_money incomeMoney,
        ir.income_date incomeDate
        from b_income_record ir
        inner join  b_loan_info li
        on ir.loan_id = li.id and ir.uid = #{uid}
        order by income_date desc limit 0,5
    </select>


    <!--List<Map<String, Object>> selectIncomeRecordListByUid(@Param("uid") Integer uid,
                                                          @Param("pageNo") int pageNo,
                                                          @Param("pageSize") Integer pageSize);-->
    <select id="selectIncomeRecordListByUid" resultType="java.util.Map">
        select
        li.product_name productName,
        bir.income_date incomeDate,
        bir.income_money incomeMoney,
        bir.bid_money bidMoney,
        bir.income_status incomeStatus
        from b_income_record bir
        inner join b_loan_info li
        on bir.loan_id = li.id and bir.uid = #{uid}
        order by income_date desc limit #{pageNo},#{pageSize}
    </select>


</mapper>